{{ $randomid := randAlphaNum 8 | lower }}
{{ $base := .Values.BaseName | default "undescribed-job" }}
{{ $namespace := .Values.NameSpace | default "default"  }}
{{ $deploy := .Values.DeployName | default (printf "%s-%s-%s" $namespace $base .Release.Name) }}
{{ $label := .Values.Label | default (printf "%s-%s" $base .Release.Name) }}
{{ $containername := .Values.ContainerName | default (printf "%s-%s" $base .Release.Name) }}
{{ $containerimage := .Values.ContainerImage | default "harbor.ai.iiis.co/xuw/pytorch:v1.1" }}
{{ $limitscpu := .Values.Limits.CPU | default "8" }}
{{ $limitsmemory := .Values.Limits.memory | default "16Gi" }}
{{ $limitsgpu := .Values.Limits.GPU | default "0" }}
{{ $nvme := .Values.NVMEStorage | default "100Gi" }}
{{ $nogfs := .Values.NoGFS | default "false" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $deploy }}
  namespace: {{ $namespace }}
  labels:
    app: {{ $label }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $label }}
  template:
    metadata:
      labels:
        app: {{ $label }}
    spec:
      hostIPC: false
      hostPID: false
      hostNetwork: false
      containers:
      - name: {{ $containername }}
        imagePullPolicy: IfNotPresent
        image: {{ $containerimage }} # 可自行更改镜像和版本
        command: ["bash", "-c", "--"]
        args: ["while true; do sleep 30; done;"]
        resources:
          limits:
            cpu: {{ $limitscpu }} # 最大CPU
            memory: {{ $limitsmemory }} # 最大内存数目
            nvidia.com/gpu: {{ $limitsgpu }} # 请求的GPU数量
        volumeMounts:
          - name: nfshome # 与下面volumes的名字对应
            mountPath: /root # 本地的挂载点
          - name: scratch1 # 与下面volumes的名字对应
            mountPath: /scratch1 # 本地的挂载点
          - name: scratch2 # 与下面volumes的名字对应
            mountPath: /scratch2 # 本地的挂载点
          - name: scratch3 # 与下面volumes的名字对应
            mountPath: /scratch3 # 本地的挂载点
          - name: scratch4 # 与下面volumes的名字对应
            mountPath: /scratch4 # 本地的挂载点
{{ if not $nogfs }}
          - name: gfshome # 与下面volumes的名字对应
            mountPath: /gfshome # 本地的挂载点
          - name: gfshare # 与下面volumes的名字对应
            mountPath: /share # 本地的挂载点
{{ end }}
      volumes:
        - name: nfshome
          persistentVolumeClaim:
            claimName: pvc-nfshome-{{ $namespace }}
        - name: scratch1
          persistentVolumeClaim:
            claimName: pvc-rancher-localpath-1-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
        - name: scratch2
          persistentVolumeClaim:
            claimName: pvc-rancher-localpath-2-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
        - name: scratch3
          persistentVolumeClaim:
            claimName: pvc-rancher-localpath-3-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
        - name: scratch4
          persistentVolumeClaim:
            claimName: pvc-rancher-localpath-4-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
{{ if not $nogfs }}
      - name: gfshome
        persistentVolumeClaim:
          claimName: gfs-sata-pvc-{{ $namespace }}
      - name: gfshare
        persistentVolumeClaim:
          claimName: gfs-sata-pvc-share-{{ $namespace }}
{{ end }}

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels: 
    app: {{ $label }}
    k8s.kuboard.cn/name: {{ $deploy }}
  name: {{ $deploy }}
  namespace: {{ $namespace }}
spec: 
  ports:
    - name: {{ $deploy }}-port
      port: 22
      protocol: TCP
      targetPort: 22
  selector: 
    app: {{ $label }}
  sessionAffinity: None
  type: NodePort
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-rancher-localpath-1-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
  namespace: {{ $namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ $nvme }}
  storageClassName: rancher-local-path
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-rancher-localpath-2-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
  namespace: {{ $namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ $nvme}}
  storageClassName: rancher-local-path
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-rancher-localpath-3-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
  namespace: {{ $namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ $nvme }}
  storageClassName: rancher-local-path
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-rancher-localpath-4-{{ $namespace }}-{{ $deploy }}-{{ $randomid}}
  namespace: {{ $namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ $nvme }}
  storageClassName: rancher-local-path
